{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,UAEA,SAAuBC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EAEFM,YAAW,KACTF,EAAQ,C,SAAEN,E,MAAUC,GAAQ,GAC3BA,GAGHO,YAAW,KACTD,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAC1BA,EAAM,G,EAKfQ,CAAc,EAAG,MACdC,MAAK,EAACV,SAAEA,EAAQC,MAAEA,MACjBU,EAAAb,GAASc,OAAOC,QAAQ,uBAAqBb,QAAiBC,MAAU,IAEzEa,OAAM,EAACd,SAAEA,EAAQC,MAAEA,MAClBU,EAAAb,GAASc,OAAOG,QAAQ,sBAAoBf,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["// import * as Notiflix from 'notiflix';\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      // Resolve\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      // Reject\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.Success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.Failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$7Y9D8","parcelRequire","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","Success","catch","Failure"],"version":3,"file":"03-promises.bff93fff.js.map"}