{"mappings":"iiBACA,IAEuBA,EAAUC,EACzBC,EAHRC,EAAAC,EAAA,UAEuBJ,EAiBT,EAjBmBC,EAiBhB,KAhBTC,EAAgBG,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACvBP,EAEFQ,YAAW,WACTF,EAAQ,CAAER,WAAUC,S,GACnBA,GAGHS,YAAW,WACTD,EAAO,CAAET,WAAUC,S,GAClBA,E,KAMNU,MAAK,SAAAC,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MACjBY,EAAAV,GAASW,OAAOC,QAAQ,uBAAwCC,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,M,IAEvEgB,OAAM,SAAAL,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MAClBY,EAAAV,GAASW,OAAOI,QAAQ,sBAAqCF,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["// import * as Notiflix from 'notiflix';\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      // Resolve\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      // Reject\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.Success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.Failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["position","delay","shouldResolve","$6JpON","parcelRequire","Math","random","Promise","resolve","reject","setTimeout","then","param","$parcel$interopDefault","Notify","Success","concat","catch","Failure"],"version":3,"file":"03-promises.d301f9f1.js.map"}